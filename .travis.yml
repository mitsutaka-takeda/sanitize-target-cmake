language: cpp
env:
  - CC_OVERLOAD=clang CXX_OVERLOAD=clang++ CMAKE_GENERATOR="Unix Makefiles"
  - CC_OVERLOAD=clang CXX_OVERLOAD=clang++ CMAKE_GENERATOR="Ninja"
before_install:
  - git submodule update --init --recursive
  - sudo apt-add-repository -y ppa:smspillaz/verapp-latest
  - sudo apt-add-repository -y ppa:kalakris/cmake
  - sudo apt-add-repository -y ppa:saiarcot895/chromium-dev
  - sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test
  - echo deb http://llvm.org/apt/precise/ llvm-toolchain-precise main | sudo tee --append /etc/apt/sources.list
  - echo deb-src http://llvm.org/apt/precise/ llvm-toolchain-precise main | sudo tee --append /etc/apt/sources.list
  - sudo apt-get update -qq
  - sudo apt-get install --force-yes `cat DEPENDENCIES`
  - cmake --version
  # Workaround to get Ninja to display verbose output
  - if [[ $CMAKE_GENERATOR == "Ninja" ]] ; then
     echo -e '!#/bin/bash\n/usr/bin/ninja -v $@' > ninja;
     chmod +x ninja;
     export PATH=`pwd`:${PATH};
    fi
script:
  - mkdir -p test/build
  - pushd test/build
  - cmake .. -G "${CMAKE_GENERATOR}" -DCMAKE_CXX_COMPILER=${CXX_OVERLOAD} -DCMAKE_C_COMPILER=${CC_OVERLOAD} &&
    cmake --build `pwd` &&
    ctest --output-on-failure &&
    popd

